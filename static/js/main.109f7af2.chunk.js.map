{"version":3,"sources":["reddit_icon.png","link_icon.png","dataSources.js","components/HistoricalPriceChart.jsx","components/CryptoCard.jsx","components/PricePage.jsx","components/NewsPage.jsx","components/Favorite.jsx","components/FavoritesPage.jsx","constants/Views.js","components/BottomNav.jsx","constants/ActionTypes.js","actions/index.js","components/App.js","registerServiceWorker.js","reducers/favorites.js","reducers/views.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","historicalHourEndPoint","symbol","limit","getData","url","format","fetch","then","result","json","items","update","pricePoints","labels","Data","forEach","pricePt","pt","x","time","y","close","push","moment","unix","local","HistoricalPriceChart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","select","index","setState","graphSelect","state","fetchingData","data","slice","filter","element","array","refresh","_this2","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","cubicInterpolationMode","react_default","a","createElement","className","CircularProgress_default","size","thickness","es","legend","display","redraw","FlatButton_default","primary","onClick","Component","PriceChange","delta","Number","price","change","style","height","Humanize","formatNumber","Math","abs","PriceLabel","aria-hidden","desc","CryptoCard","_Component","apply","arguments","inherits","createClass","key","value","Card","containerStyle","paddingBottom","title","info","name","titleStyle","fontSize","subtitle","rank","market_cap_usd","subtitleStyle","avatar","coinSymbols","showExpandableButton","price_usd","price_btc","width","percent_change_1h","percent_change_24h","percent_change_7d","expandable","components_HistoricalPriceChart","API","PricePage","coinStats","feedSize","console","log","length","updated","concat","_this3","map","el","components_CryptoCard","fetchMore","defaultProps","RedditPost","shouldExpand","is_self","thumb","thumbnail","reddit_icon","link_icon","author","actAsExpander","selftext","window","open","NewsPage","posts","children","lastPostName","REDDIT_ENDPOINT","arr","fetchFirst","fetchNext","Favorite","coin","coinId","ok","Error","catch","error","removeFavorite","load","position","bottom","right","FavoritesPage","textValue","setOpen","isOpen","handleSubmit","addFavorite","handleTextFieldChange","e","target","actions","TextField_default","hintText","onChange","favorites","components_Favorite","id","Dialog_default","modal","FloatingActionButton_default","add_default","PRICE_PAGE","FAVORITE_PAGE","NEWS_PAGE","BottomNav","_ref","viewName","view","changeView","BottomNavigation","selectedIndex","viewsConst","icon","FontIcon_default","ADD_FAVORITE","REMOVE_FAVORITE","CHANGE_VIEW","type","types","connect","favoriteCoins","views","dispatch","bindActionCreators","Actions","AppBar_default","showMenuIconButton","components_PricePage","components_NewsPage","components_FavoritesPage","getPage","Paper_default","zDepth","components_BottomNav","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialState","defineState","defaultState","rootReducer","combineReducers","undefined","action","toConsumableArray","fav","store","createStore","storeSynchronize","ReactDOM","render","react_redux_es","MuiThemeProvider_default","components_App","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.109f7af2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reddit_icon.2c969cc8.png\";","module.exports = __webpack_public_path__ + \"static/media/link_icon.5fae64fa.png\";","import moment from 'moment';\r\nimport coinSymbols from './coinSymbols.json'\r\n\r\nfunction historicalHourEndPoint(symbol, limit) {\r\n    return \"https://min-api.cryptocompare.com/data/histominute?fsym=\" + symbol + \"&tsym=USD&limit=\" + limit + \"&aggregate=1&e=CCCAGG\";\r\n}\r\n\r\nfunction getData(url, format) {\r\n    return fetch(url)\r\n        .then(result => result.json())\r\n        .then(items => {\r\n            var update = {\r\n                pricePoints: [],\r\n                labels: []\r\n            };\r\n            items.Data.forEach(function (pricePt) {\r\n                var pt = { x: pricePt.time, y: pricePt.close };\r\n                update.pricePoints.push(pt);\r\n                var time = moment.unix(pricePt.time).local().format(format);\r\n                update.labels.push(time);\r\n            });\r\n            return update;\r\n        });\r\n}\r\n\r\nexport function historical1Hour(symbol) {\r\n    return getData(historicalHourEndPoint(symbol, 60), 'hh:mm:ss');\r\n}\r\n\r\nexport function historical24Hour(symbol) {\r\n    return getData(historicalHourEndPoint(symbol, 1440), 'hh:mm');\r\n}\r\n\r\nexport function coinLogoUrl(symbol) {\r\n    return coinSymbols[symbol] ? coinSymbols['BaseImageUrl'] + coinSymbols[symbol] : null;\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Line } from 'react-chartjs-2';\r\nimport CircularProgress from 'material-ui/CircularProgress';\r\nimport FlatButton from 'material-ui/FlatButton';\r\nimport { historical24Hour } from '../dataSources';\r\nimport '../styles/HistoricalPriceChart.css';\r\n\r\nclass HistoricalPriceChart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fetchingData: true,\r\n            graphSelect: 0,\r\n            data: [\r\n                {\r\n                    pricePoints: [],\r\n                    labels: []\r\n                },\r\n                {\r\n                    pricePoints: [],\r\n                    labels: []\r\n                }\r\n            ],\r\n        }\r\n    }\r\n    refresh() {\r\n        var _this = this;\r\n        historical24Hour(this.props.symbol).then(update => {\r\n            _this.setState({\r\n                data: [\r\n                    {\r\n                        pricePoints: update.pricePoints.slice(60),\r\n                        labels: update.labels.slice(60)\r\n                    },\r\n                    {\r\n                        pricePoints: update.pricePoints.filter((element, index, array) => (index % 10 === 0)),\r\n                        labels: update.labels.filter((element, index, array) => (index % 10 === 0))\r\n                    }\r\n                ],\r\n                fetchingData: false\r\n            });\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        this.refresh();\r\n    }\r\n\r\n    select = (index) => this.setState({ graphSelect: index });\r\n\r\n    render() {\r\n        var data = {\r\n            labels: this.state.data[this.state.graphSelect].labels,\r\n            datasets: [\r\n                {\r\n                    label: this.props.symbol,\r\n                    fill: true,\r\n                    lineTension: 0.1,\r\n                    backgroundColor: 'rgba(75,192,192,0.4)',\r\n                    borderColor: 'rgba(75,192,192,1)',\r\n                    borderCapStyle: 'butt',\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0,\r\n                    borderJoinStyle: 'miter',\r\n                    pointBorderColor: 'rgba(75,192,192,1)',\r\n                    pointBackgroundColor: '#fff',\r\n                    pointBorderWidth: 1,\r\n                    pointHoverRadius: 5,\r\n                    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                    pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                    pointHoverBorderWidth: 2,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 10,\r\n                    data: this.state.data[this.state.graphSelect].pricePoints,\r\n                    cubicInterpolationMode: 'monotone'\r\n                }\r\n            ]\r\n        };\r\n        return (\r\n            <div className='float-container'>\r\n                <h5>{this.state.graphSelect === 0 ? '1 Hour Graph' : '24 Hour Graph'}</h5>\r\n                {this.state.fetchingData &&\r\n                    <CircularProgress className='above-content' size={50} thickness={5} />\r\n                }\r\n                <Line data={data} legend={{ display: false }} redraw />\r\n                <FlatButton label=\"1 Hour\" primary={this.state.graphSelect === 0} onClick={() => this.select(0)} />\r\n                <FlatButton label=\"24 Hour\" primary={this.state.graphSelect === 1} onClick={() => this.select(1)} />\r\n            </div>\r\n        );\r\n    }\r\n};\r\nHistoricalPriceChart.propTypes = {\r\n    symbol: PropTypes.string.isRequired\r\n}\r\n\r\nexport default HistoricalPriceChart; ","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Card, CardHeader, CardText } from 'material-ui/Card';\r\nimport Humanize from 'humanize-plus';\r\nimport HistoricalPriceChart from './HistoricalPriceChart';\r\nimport { coinLogoUrl } from '../dataSources';\r\nimport '../styles/CryptoCard.css';\r\n\r\nexport class CryptoCard extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Card\r\n                containerStyle={{ paddingBottom: 0 }}\r\n                className=\"pad-card\"\r\n            >\r\n                <CardHeader\r\n                    title={this.props.info.name + ' (' + this.props.info.symbol + ')'}\r\n                    titleStyle={{ fontSize: '1.3em' }}\r\n                    subtitle={this.props.info.rank + ': Market Cap: $' + Humanize.formatNumber(this.props.info.market_cap_usd, 2)}\r\n                    subtitleStyle={{ fontSize: '.9em' }}\r\n                    avatar={coinLogoUrl(this.props.info.symbol)}\r\n                    showExpandableButton={true}\r\n                >\r\n                    <h4 className=\"unit-lg\"><span className=\"price-lg\">{'$' + Humanize.formatNumber(this.props.info.price_usd, 2)}</span> USD</h4>\r\n                    <h6>{Humanize.formatNumber(this.props.info.price_btc, 8) + ' BTC'}</h6>\r\n                    <table style={{ width: '100%' }}>\r\n                        <tbody>\r\n                            <tr className='table-header'>\r\n                                <PriceLabel\r\n                                    desc={'1hr'}\r\n                                    change={this.props.info.percent_change_1h}\r\n                                />\r\n                                <PriceLabel\r\n                                    desc={'24hr'}\r\n                                    change={this.props.info.percent_change_24h}\r\n                                />\r\n                                <PriceLabel\r\n                                    desc={'7d'}\r\n                                    change={this.props.info.percent_change_7d}\r\n                                />\r\n                            </tr>\r\n                            <tr className='table-content'>\r\n                                <PriceChange\r\n                                    price={this.props.info.price_usd}\r\n                                    change={this.props.info.percent_change_1h}\r\n                                />\r\n                                <PriceChange\r\n                                    price={this.props.info.price_usd}\r\n                                    change={this.props.info.percent_change_24h}\r\n                                />\r\n                                <PriceChange\r\n                                    price={this.props.info.price_usd}\r\n                                    change={this.props.info.percent_change_7d}\r\n                                />\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </CardHeader>\r\n                <CardText\r\n                    expandable={true}\r\n                >\r\n                    <HistoricalPriceChart symbol={this.props.info.symbol} />\r\n                </CardText>\r\n            </Card >\r\n        );\r\n    }\r\n}\r\n\r\nfunction PriceChange(props) {\r\n    var delta = (Number(props.price) * Number(props.change)) / 100;\r\n    return (\r\n        <td style={{ height: '20px' }}>\r\n            {(delta > 0.0 ? '+' : '-') + '$' + Humanize.formatNumber(Math.abs(delta), 2)}\r\n        </td>\r\n    );\r\n}\r\n\r\nfunction PriceLabel(props) {\r\n    return (\r\n        <td\r\n            style={{ height: '10px' }}>\r\n            <i className={props.change > 0.0 ? \"fa fa-caret-up up fa-lg\" : \"fa fa-caret-down down fa-lg\"} aria-hidden=\"true\"></i>\r\n            {' ' + props.desc + ' (' + Humanize.formatNumber(props.change, 2) + '%)'}\r\n        </td>\r\n    );\r\n}\r\nCryptoCard.propTypes = {\r\n    info: PropTypes.object.isRequired\r\n}\r\nexport default CryptoCard; ","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CircularProgress from 'material-ui/CircularProgress';\r\nimport FlatButton from 'material-ui/FlatButton';\r\nimport CryptoCard from './CryptoCard';\r\n\r\nconst API = \"https://api.coinmarketcap.com/v1/ticker/?limit=\";\r\nclass PricePage extends Component {\r\n    static defaultProps = {\r\n        feedSize: 50\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            coinStats: [],\r\n            fetchingData: true\r\n        };\r\n    }\r\n    refresh() {\r\n        this.setState({ fetchingData: true })\r\n        var _this = this;\r\n        fetch(API + this.props.feedSize)\r\n            .then(result => result.json())\r\n            .then(items => {\r\n                _this.setState({\r\n                    coinStats: items,\r\n                    fetchingData: false\r\n                });\r\n            })\r\n        console.log('Refreshing prices!')\r\n    }\r\n\r\n    fetchMore() {\r\n        var _this = this;\r\n        fetch(API + this.props.feedSize + '&start=' + this.state.coinStats.length)\r\n            .then(result => result.json())\r\n            .then(items => {\r\n                var updated = this.state.coinStats.concat(items);\r\n                _this.setState({\r\n                    coinStats: updated\r\n                });\r\n            });\r\n        console.log('Adding more prices');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh(this.props.feedSize);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container-fluid content-scroll'>\r\n                <div className='row'>\r\n                    {this.state.fetchingData ?\r\n                        (<div className='center-content'>\r\n                            <CircularProgress size={80} thickness={7} />\r\n                        </div>)\r\n                        :\r\n                        (this.state.coinStats.map(function (el, index) {\r\n                            return <div key={index} className='col-md-6'>\r\n                                <CryptoCard info={el} />\r\n                            </div>\r\n                        }))\r\n                    }\r\n                    <FlatButton className='col-md-12' onClick={() => this.fetchMore()} label=\"Load More\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nPricePage.propTypes = {\r\n    feedSize: PropTypes.number\r\n}\r\nexport default PricePage;","import React, { Component } from 'react';\r\nimport { Card, CardActions, CardHeader, CardText } from 'material-ui/Card';\r\nimport FlatButton from 'material-ui/FlatButton';\r\nimport reddit_icon from '../reddit_icon.png';\r\nimport link_icon from '../link_icon.png';\r\n\r\n\r\nconst REDDIT_ENDPOINT = 'https://www.reddit.com/r/CryptoCurrency.json';\r\n\r\nfunction RedditPost(props) {\r\n    let shouldExpand = props.info.is_self === true;\r\n    let thumb = props.info.thumbnail;\r\n    if (thumb === 'self') {\r\n        thumb = reddit_icon;\r\n    } else if (thumb === 'default') {\r\n        thumb = link_icon;\r\n    }\r\n    return (\r\n        <Card className=\"pad-card\">\r\n            <CardHeader\r\n                title={props.info.title}\r\n                subtitle={props.info.author}\r\n                actAsExpander={shouldExpand}\r\n                showExpandableButton={shouldExpand}\r\n                avatar={thumb}\r\n            />\r\n\r\n            < CardText expandable={shouldExpand}>\r\n                {props.info.selftext}\r\n            </CardText>\r\n            <CardActions>\r\n                <FlatButton label=\"View Post\" onClick={() => {\r\n                    window.open(props.info.url);\r\n                }} />\r\n\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\nclass NewsPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: []\r\n        };\r\n    }\r\n\r\n    fetchFirst() {\r\n        var _this = this;\r\n        fetch(REDDIT_ENDPOINT)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                _this.setState({ posts: result.data.children, lastPostName: result.data.children[result.data.children.length - 1].data.name });\r\n            });\r\n        console.log('Fetching first news posts');\r\n    }\r\n\r\n    fetchNext(lastPostName) {\r\n        var _this = this;\r\n        fetch(REDDIT_ENDPOINT + '?count=' + 25 + '&after=' + lastPostName)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                var arr = _this.state.posts.concat(result.data.children);\r\n                _this.setState({ posts: arr, lastPostName: result.data.children[result.data.children.length - 1].data.name });\r\n            });\r\n    }\r\n    componentWillMount() {\r\n        this.fetchFirst();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container content-scroll'>\r\n                <div className='row'>\r\n                    {this.state.posts.map(function (el, index) {\r\n                        return <div className='col-md-12' key={index}>\r\n                            <RedditPost info={el.data} />\r\n                        </div>\r\n                    })}\r\n                    <FlatButton className='col-md-12' onClick={() => this.fetchNext(this.state.lastPostName)} label=\"Load More\" />\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewsPage;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport CryptoCard from './CryptoCard';\r\nimport CircularProgress from 'material-ui/CircularProgress';\r\n\r\nconst API = \"https://api.coinmarketcap.com/v1/ticker/\";\r\nclass Favorite extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            coin: [],\r\n            fetchingData: true\r\n        };\r\n    }\r\n\r\n    load() {\r\n        var _this = this;\r\n        fetch(API + this.props.coinId + '/')\r\n            .then(result => {\r\n                if (result.ok) {\r\n                    return result.json();\r\n                }\r\n                throw new Error(\"Not a valid coin\");\r\n            })\r\n            .then(items => {\r\n                _this.setState({\r\n                    coin: items.slice(0, 1),\r\n                    fetchingData: false\r\n                });\r\n            }).catch(error => {\r\n                this.props.removeFavorite();\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.load();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='row'>\r\n                {this.state.fetchingData ?\r\n                    (<div className='center-content'>\r\n                        <CircularProgress size={80} thickness={7} />\r\n                    </div>)\r\n                    :\r\n                    (this.state.coin.map(function (el, index) {\r\n                        return <div key={index} className='col-lg-12'>\r\n                            <CryptoCard info={el} />\r\n                        </div>\r\n                    }))\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFavorite.propTypes = {\r\n    coinId: PropTypes.string.isRequired,\r\n    removeFavorite: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Favorite;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport FloatingActionButton from 'material-ui/FloatingActionButton';\r\nimport ContentAdd from 'material-ui/svg-icons/content/add';\r\nimport Dialog from 'material-ui/Dialog';\r\nimport FlatButton from 'material-ui/FlatButton';\r\nimport TextField from 'material-ui/TextField';\r\nimport Favorite from './Favorite';\r\n\r\nconst style = {\r\n    position: 'fixed',\r\n    bottom: 80,\r\n    right: 25,\r\n};\r\n\r\nclass FavoritesPage extends Component {\r\n    state = {\r\n        open: false,\r\n        textValue: ''\r\n    };\r\n\r\n    setOpen = (isOpen) => {\r\n        this.setState({\r\n            open: isOpen,\r\n            textValue: ''\r\n        });\r\n    };\r\n    handleSubmit = () => {\r\n        if (this.state.textValue !== '') {\r\n            this.props.addFavorite(this.state.textValue);\r\n        }\r\n        this.setState({\r\n            open: false,\r\n        });\r\n    }\r\n    handleTextFieldChange = (e) => {\r\n        this.setState({\r\n            textValue: e.target.value\r\n        });\r\n    };\r\n    render() {\r\n        const actions = [\r\n            <TextField\r\n                hintText=\"Coin Name\"\r\n                onChange={this.handleTextFieldChange}\r\n            />,\r\n            <FlatButton\r\n                label=\"Cancel\"\r\n                primary={true}\r\n                onClick={() => this.setOpen(false)}\r\n            />,\r\n            <FlatButton\r\n                label=\"Add\"\r\n                primary={true}\r\n                onClick={this.handleSubmit}\r\n            />,\r\n        ];\r\n        return <div >\r\n            <div className='container-fluid content-scroll'>\r\n                <div className='row'>\r\n                    {this.props.favorites.map((coin, index) =>\r\n                        <div key={index} className='col-md-6'>\r\n                            <Favorite coinId={coin.id} removeFavorite={() => this.props.removeFavorite(coin.id)} />\r\n                        </div>)}\r\n                </div>\r\n            </div>\r\n            <Dialog\r\n                title=\"Add Favorite\"\r\n                actions={actions}\r\n                modal={true}\r\n                open={this.state.open}\r\n            >\r\n                Add any coin that you want to track!\r\n            </Dialog>\r\n            <FloatingActionButton style={style} onClick={() => this.setOpen(true)}>\r\n                <ContentAdd />\r\n            </FloatingActionButton>\r\n        </div >\r\n    }\r\n};\r\n\r\nFavoritesPage.propTypes = {\r\n    addFavorite: PropTypes.func.isRequired,\r\n    removeFavorite: PropTypes.func.isRequired,\r\n    favorites: PropTypes.array.isRequired\r\n}\r\n\r\nexport default FavoritesPage;","export const PRICE_PAGE = 'PRICE_PAGE';\r\nexport const FAVORITE_PAGE = 'FAVORITE_PAGE';\r\nexport const NEWS_PAGE = 'NEWS_PAGE';","import React from 'react';\r\nimport FontIcon from 'material-ui/FontIcon';\r\nimport { BottomNavigation, BottomNavigationItem } from 'material-ui/BottomNavigation';\r\nimport * as viewsConst from '../constants/Views'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst BottomNav = ({ view, changeView }) => (\r\n    <BottomNavigation selectedIndex={selectedIndex(view.view)}>\r\n        <BottomNavigationItem\r\n            label=\"Prices\"\r\n            icon={<FontIcon className=\"fa fa-line-chart\" />}\r\n            onClick={() => changeView(viewsConst.PRICE_PAGE)}\r\n        />\r\n        <BottomNavigationItem\r\n            label=\"Favorites\"\r\n            icon={<FontIcon className=\"fa fa-heart\" />}\r\n            onClick={() => changeView(viewsConst.FAVORITE_PAGE)}\r\n        />\r\n        <BottomNavigationItem\r\n            label=\"News\"\r\n            icon={<FontIcon className=\"fa fa-newspaper-o\" />}\r\n            onClick={() => changeView(viewsConst.NEWS_PAGE)}\r\n        />\r\n    </BottomNavigation>\r\n);\r\nBottomNav.propTypes = {\r\n    view: PropTypes.object.isRequired,\r\n    changeView: PropTypes.func.isRequired\r\n}\r\nfunction selectedIndex(viewName) {\r\n    if (viewName === viewsConst.NEWS_PAGE) {\r\n        return 2;\r\n    } else if (viewName === viewsConst.FAVORITE_PAGE) {\r\n        return 1;\r\n    } else {\r\n        return 0;\r\n    }\r\n}\r\nexport default BottomNav;","export const ADD_FAVORITE = 'ADD_FAVORITE'\r\nexport const REMOVE_FAVORITE = 'REMOVE_FAVORITE'\r\nexport const CHANGE_VIEW = 'CHANGE_VIEW';\r\n","import * as types from '../constants/ActionTypes'\r\n\r\nexport const addFavorite = coinId => ({\r\n    type: types.ADD_FAVORITE,\r\n    coinId\r\n});\r\n\r\nexport const removeFavorite = coinId => ({\r\n    type: types.REMOVE_FAVORITE,\r\n    coinId\r\n});\r\n\r\nexport const changeView = view => ({\r\n    type: types.CHANGE_VIEW,\r\n    view: view\r\n})","import React from 'react';\r\nimport AppBar from 'material-ui/AppBar';\r\nimport Paper from 'material-ui/Paper';\r\nimport PropTypes from 'prop-types'\r\nimport PricePage from './PricePage';\r\nimport NewsPage from './NewsPage';\r\nimport FavoritesPage from './FavoritesPage';\r\nimport BottomNav from './BottomNav';\r\n\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport * as Actions from '../actions';\r\nimport * as viewsConst from '../constants/Views'\r\nimport '../styles/App.css';\r\n\r\n\r\nconst App = ({ favoriteCoins, actions, view }) => (\r\n  <div className=\"wrapper\">\r\n    <AppBar\r\n      title={'Crypto Stats'}\r\n      showMenuIconButton={false}\r\n      style={{ position: 'fixed' }}\r\n    />\r\n    {getPage(view, favoriteCoins, actions)}\r\n\r\n    <footer className=\"foot\">\r\n      <Paper zDepth={3} >\r\n        <BottomNav view={view} changeView={actions.changeView} />\r\n      </Paper>\r\n    </footer>\r\n  </div>\r\n);\r\n\r\nfunction getPage(view, favoriteCoins, actions) {\r\n  if (view.view === viewsConst.PRICE_PAGE) {\r\n    return <PricePage />\r\n  } else if (view.view === viewsConst.NEWS_PAGE) {\r\n    return <NewsPage />\r\n  } else if (view.view === viewsConst.FAVORITE_PAGE) {\r\n    return <FavoritesPage\r\n      addFavorite={actions.addFavorite}\r\n      removeFavorite={actions.removeFavorite}\r\n      favorites={favoriteCoins} />\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  favoriteCoins: PropTypes.array.isRequired,\r\n  actions: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  favoriteCoins: state.favorites,\r\n  view: state.views\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators(Actions, dispatch)\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App)\r\n\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as types from '../constants/ActionTypes'\r\nimport { defineState } from 'redux-localstore'\r\n\r\nconst defaultState = []\r\nconst initialState = defineState(defaultState)('favorites')\r\n\r\nexport default function favorites(state = initialState, action) {\r\n    switch (action.type) {\r\n        case types.ADD_FAVORITE:\r\n            return [\r\n                ...state,\r\n                { id: action.coinId }\r\n            ]\r\n\r\n        case types.REMOVE_FAVORITE:\r\n            return state.filter(fav => fav.id !== action.coinId)\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as types from '../constants/ActionTypes'\r\nimport * as viewsConst from '../constants/Views'\r\nimport { defineState } from 'redux-localstore'\r\n\r\nconst defaultState = {\r\n    view: viewsConst.FAVORITE_PAGE\r\n}\r\nconst initialState = defineState(defaultState)('views')\r\n\r\nexport default function views(state = initialState, action) {\r\n    switch (action.type) {\r\n        case types.CHANGE_VIEW:\r\n            return {\r\n                view: action.view\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport favorites from './favorites'\r\nimport views from './views'\r\n\r\nconst rootReducer = combineReducers({\r\n    favorites,\r\n    views\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport rootReducer from './reducers';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux'\r\nimport storeSynchronize from 'redux-localstore'\r\n\r\nconst store = createStore(rootReducer);\r\nstoreSynchronize(store);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <MuiThemeProvider>\r\n            <App />\r\n        </MuiThemeProvider>\r\n    </Provider>,\r\n    document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}